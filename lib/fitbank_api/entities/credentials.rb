# typed: strict
# frozen_string_literal: true

require 'cpf_cnpj'

module FitBankApi
  module Entities
    # Wrapper for (Latam) credentials inside FitBank. It holds the username and
    # password used for authentication the CNPJ of Latam and some identifier generated
    # by FitBank which are unique for our account. Most of the values must be passed
    # at each API call.
    class Credentials
      extend T::Sig

      sig { returns(String) }
      attr_accessor :cnpj, :username, :password

      sig { returns(Integer) }
      attr_accessor :mkt_place_id, :business_unit_id, :partner_id

      sig do
        params(
          cnpj: String,
          username: String,
          password: String,
          mkt_place_id: Integer,
          business_unit_id: Integer,
          partner_id: Integer
        ).void
      end
      # Create credentials representing our user inside FitBank
      # @param [String] cnpj The CNPJ of the account owner.
      # @param [String] username The username of the account owner. This is passed to each
      # API call in order to perform authentication. In the FitBank docs this is sometimes
      # reffered as key.
      # @param [String] password The password of the account owner. This is passed to each
      # API call in order to perform authentication. In the FitBank API this is sometimes
      # reffered as secret
      # @param [Integer] mkt_place_id Id generated by FitBank
      # @param [Integer] business_unit_id Id generated by FitBank used in PIX API
      # @param [Integer] partner_id Id generated by FitBank used in PIX API
      def initialize(
        cnpj:,
        username:,
        password:,
        mkt_place_id:,
        business_unit_id:,
        partner_id:
      )
        # TODO: Add custom exception
        raise 'Invalid CNPJ' unless CNPJ.valid?(cnpj)

        @cnpj = T.let(CNPJ.new(cnpj).stripped, String)
        @mkt_place_id = mkt_place_id
        @business_unit_id = business_unit_id
        @partner_id = partner_id
        @username = username
        @password = password
      end
    end
  end
end
